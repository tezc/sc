name: x64-ubuntu
on:
  schedule:
    - cron: '0 0 * * 0'
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
  workflow_dispatch:
    inputs:
      skip:
        description: 'Delete its name if you want to keep the job'
        required: false
        default: 'ubuntu,gcc-thread,clang-tidy,32bit-address,32bit-undefined'

jobs:
  ubuntu:
    runs-on: ubuntu-20.04
    if: |
      (github.event_name == 'workflow_dispatch' ||
      (github.event_name == 'schedule' && github.repository == 'tezc/sc')) && !contains(github.event.inputs.skip, 'ubuntu')
    name: Build on Ubuntu

    strategy:
      fail-fast: false
      matrix:
        compiler: [ gcc, clang ]
    steps:
      - uses: actions/checkout@v2.1.0
      - name: build
        env:
          CC: ${{ matrix.compiler }}
        run: |
          sudo apt update
          sudo apt-get install valgrind cmake
          mkdir build-debug && cd build-debug
          cmake .. -DSANITIZER=address
          make -j
          make check
          rm -rf *
          cmake .. -DSANITIZER=undefined
          make -j
          make check
          rm -rf *
          cmake ..
          make -j
          make valgrind

  ubuntu-gcc-thread:
    runs-on: ubuntu-latest
    if: |
      (github.event_name == 'workflow_dispatch' ||
      (github.event_name == 'schedule' && github.repository == 'tezc/sc')) && !contains(github.event.inputs.skip, 'gcc-thread')
    name: Thread sanitizer
    steps:
      - uses: actions/checkout@v2.1.0
      - name: build
        env:
          CC: gcc
        run: |
          sudo apt update
          sudo apt-get install cmake
          mkdir build-debug && cd build-debug
          cmake .. -DSANITIZER=thread
          make -j
          make check
  ubuntu-clang-tidy:
    runs-on: ubuntu-latest
    if: |
      (github.event_name == 'workflow_dispatch' ||
      (github.event_name == 'schedule' && github.repository == 'tezc/sc')) && !contains(github.event.inputs.skip, 'clang-tidy')
    name: Clang Tidy
    steps:
      - uses: actions/checkout@v2.1.0
      - name: build
        env:
          CC: clang
        run: |
          sudo apt update
          sudo apt-get install cmake clang-tidy
          mkdir build-debug && cd build-debug
          cmake .. -DSC_CLANG_TIDY=1
          make -j
          make check
  ubuntu-32bit-address:
    runs-on: ubuntu-latest
    if: |
      (github.event_name == 'workflow_dispatch' ||
      (github.event_name == 'schedule' && github.repository == 'tezc/sc')) && !contains(github.event.inputs.skip, '32bit-address')
    name: 32bit-address
    steps:
      - uses: actions/checkout@v2.1.0
      - name: build
        env:
          CC: gcc
        run: |
          sudo apt update
          sudo apt-get install cmake gcc-multilib
          mkdir build-debug && cd build-debug
          cmake .. -DCMAKE_C_FLAGS=-m32 -DSANITIZER=address
          make -j
          make check
  ubuntu-32bit-undefined:
    runs-on: ubuntu-latest
    if: |
      (github.event_name == 'workflow_dispatch' ||
      (github.event_name == 'schedule' && github.repository == 'tezc/sc')) && !contains(github.event.inputs.skip, '32bit-undefined')
    name: 32bit-undefined
    steps:
      - uses: actions/checkout@v2.1.0
      - name: build
        env:
          CC: gcc
        run: |
          sudo apt update
          sudo apt-get install cmake gcc-multilib
          mkdir build-debug && cd build-debug
          cmake .. -DCMAKE_C_FLAGS=-m32 -DSANITIZER=undefined
          make -j
          make check